{"version":3,"sources":["logo.svg","components/ThinTextField.js","components/RectangularSmallButton.js","components/FieldsAndButton.js","pages/SignUpPage.js","pages/LogInPage.js","components/GridTileCard.js","components/SingleGridList.js","pages/InventoryPage.js","App.js","reportWebVitals.js","index.js"],"names":["ThinTextField","props","Grid","item","xs","icon","FormControl","fullWidth","TextField","variant","label","fieldName","inputProps","maxLength","value","field","onChange","e","changeField","FormHelperText","helperText","RectangularSmallButton","style","textAlign","Button","color","onClick","submitForm","backgroundColor","disabled","valid","buttonName","FieldsAndButton","stateInitializer","thinTextFieldList","forEach","textFieldObj","useState","fieldObj","setFieldObj","setValid","prevState","currObj","target","invalidFields","checkValid","console","log","Object","keys","length","fetchData","requestOptions","endpoint","a","fetch","res","json","data","returnObj","entries","fieldValue","minLength","validEmailForm","email","test","toLowerCase","map","index","registerRequestOptions","method","headers","body","JSON","stringify","user_name","registerEndpoint","signUpFieldList","AccountCircle","className","Email","SignUpPage","CssBaseline","Container","maxWidth","container","spacing","alignItems","justify","minHeight","Card","CardContent","Typography","LogInPage","loginFieldList","GridTileCard","padding","GridListTile","CardHeader","action","IconButton","aria-label","Add","Delete","CardActionArea","number","name","SingleGridList","GridList","inventoryList","inventory","InventoryPage","align","App","background","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d26fa70c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport { Grid, InputAdornment, TextField, FormHelperText, FormControl } from '@material-ui/core'\r\nimport { AccountCircle } from '@material-ui/icons';\r\n\r\n\r\nconst ThinTextField = (props) => {\r\n\r\n    const handleFieldChange = (e) => {\r\n        // change the value of field when the text is changing\r\n        props.changeField(e, props.fieldName);\r\n    }\r\n\r\n    // const classes = {\r\n    //     input: {color: '#F1B24A'}\r\n    // }\r\n    return (\r\n        <>\r\n            <Grid item xs={1}>\r\n                {props.icon}\r\n            </Grid>\r\n            <Grid item xs={12}> \r\n                <FormControl fullWidth> \r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        label={props.fieldName}\r\n                        inputProps={{\r\n                            maxLength: props.maxLength\r\n                        }}\r\n                        value={props.field}\r\n                        onChange={handleFieldChange}\r\n                        \r\n                    />\r\n                    \r\n                    <FormHelperText>{props.helperText}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ThinTextField;","import React from \"react\";\r\nimport { Grid, Button } from '@material-ui/core';\r\n\r\nconst RectangularSmallButton = (props) => {\r\n\r\n    const handleButtonClick = () => {\r\n        // call the parent callback function to send a request to the backend\r\n        props.submitForm();\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} style={{ textAlign:'center' }}>\r\n            <Button \r\n                variant='contained' \r\n                color='primary' \r\n                onClick={handleButtonClick} \r\n                style={{backgroundColor: '#880e4f'}}\r\n                disabled={!props.valid}\r\n            >\r\n                {props.buttonName}\r\n            </Button>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default RectangularSmallButton;","import React, { useState, useEffect } from \"react\";\r\nimport ThinTextField from \"./ThinTextField\";\r\nimport RectangularSmallButton from \"./RectangularSmallButton\";\r\n\r\nconst FieldsAndButton = (props) => {\r\n  // make an object with the fieldname as a key and an empty string as a value\r\n  const stateInitializer = {};\r\n  props.thinTextFieldList.forEach(\r\n    (textFieldObj) => (stateInitializer[textFieldObj.fieldName] = \"\")\r\n  );\r\n\r\n  const [fieldObj, setFieldObj] = useState(stateInitializer);\r\n  const [valid, setValid] = useState(false);\r\n  const baseBackendUrl = `https://inventory-system-app.herokuapp.com/api`\r\n  // console.log('Field Object');\r\n  // console.log(fieldObj);\r\n\r\n  /**\r\n   * Updates the state of the form, will be used as a callback for the child components to update state\r\n   * @param {event} e - The event taking place on a field change (person typing)\r\n   * @param {string} fieldName - The name of the current field being changed\r\n   */\r\n  const changeField = (e, fieldName) => {\r\n    // console.log(fieldObj);\r\n    if (fieldName in fieldObj) {\r\n      // ensure that the field is part of the initial list and update the state\r\n      setFieldObj((prevState) => {\r\n        const currObj = { ...prevState };\r\n        currObj[fieldName] = e.target.value;\r\n        return currObj;\r\n      });\r\n\r\n      // check validity of fields after change\r\n      const invalidFields = checkValid();\r\n      console.log(invalidFields);\r\n      if (Object.keys(invalidFields).length === 0) {\r\n          setValid(true);\r\n      }\r\n      else {\r\n        setValid(false);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Send a request to the backend and recieve info on to stay or change page\r\n   */\r\n  const submitForm = () => {\r\n    // TODO: Add this as a service\r\n    if (valid) {\r\n        // send post request to backend using fetch\r\n        if (props.buttonName === \"Log in\") {\r\n            const loginRequestOptions = {\r\n\r\n            }\r\n        }\r\n        else if (props.buttonName === \"Regsiter\") {\r\n            const registerRequestOptions = {\r\n                method: \"POST\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    user_name: fieldObj['Username'],\r\n                    email: fieldObj['Email'],\r\n                })\r\n            };\r\n            const registerEndpoint = `${baseBackendUrl}/sign-up`;\r\n            const json = fetchData(registerRequestOptions, registerEndpoint);\r\n            console.log('Json here ' + json)\r\n        }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send a post request to a backend endpoint\r\n   * @param {object} requestOptions - contains post request form parameters\r\n   * @param {string} endpoint - backend endpoint to be used\r\n   */\r\n  const fetchData = async(requestOptions, endpoint) => {\r\n      const res = await fetch(\r\n        endpoint, requestOptions\r\n      );\r\n\r\n      const json = await res.json();\r\n      console.log('Json data ' + json.data);\r\n      return json;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks that all fields in a form are valid\r\n   */\r\n  const checkValid = () => {\r\n    const returnObj = {};\r\n\r\n    for (const [fieldName, fieldValue] of Object.entries(fieldObj)) {\r\n      // set max/min lengths depending on the type of field\r\n      let maxLength;\r\n      let minLength;\r\n      if (fieldName === \"Username\") {\r\n        maxLength = 30;\r\n        minLength = 1;\r\n      } else if (fieldName === \"Email\") {\r\n        maxLength = 50;\r\n        minLength = 5;\r\n      }\r\n\r\n      // first deal with email fields\r\n      if (fieldName === \"Email\" && !validEmailForm(fieldValue)) {\r\n        // email form is invalid\r\n        returnObj[fieldName] = [false, \"form\"];\r\n      }\r\n\r\n      // check errors in the field length\r\n      if (fieldValue.length > maxLength || fieldValue.length < minLength) {\r\n        if (fieldValue.length < minLength) {\r\n          returnObj[fieldName] = [false, \"short\"];\r\n        }\r\n        // email is too long\r\n        else {\r\n          returnObj[fieldName] = [false, \"long\"];\r\n        }\r\n      }\r\n    }\r\n    return returnObj;\r\n  };\r\n\r\n\r\n  const validEmailForm = (email) => {\r\n    const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return emailRegEx.test(email.toLowerCase());\r\n  };\r\n\r\n//   useEffect(() => {\r\n//     console.log(fieldObj);\r\n//   });\r\n\r\n  return (\r\n    <>\r\n      {props.thinTextFieldList.map((textFieldObj, index) => (\r\n        <ThinTextField\r\n          fieldName={textFieldObj.fieldName}\r\n          icon={textFieldObj.icon}\r\n          helperText={textFieldObj.helperText}\r\n          maxLength={textFieldObj.maxLength}\r\n          key={index}\r\n          changeField={changeField}\r\n        />\r\n      ))}\r\n      <RectangularSmallButton buttonName={props.buttonName} valid={valid} submitForm={submitForm} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FieldsAndButton;\r\n","import React from \"react\";\r\nimport FieldsAndButton from '../components/FieldsAndButton';\r\nimport { Grid, Typography, CssBaseline, Container, Card, CardContent } from '@material-ui/core'\r\nimport { Email, AccountCircle } from '@material-ui/icons';\r\n\r\nconst signUpFieldList = [\r\n    {\r\n        fieldName: 'Username',\r\n        icon: <AccountCircle className='icon-style' style={{color: '#880e4f'}}/>,\r\n        helperText: 'Min length 1, Max length 30', \r\n        maxLength: 30,\r\n        minLength: 1\r\n    },\r\n    {\r\n        fieldName:'Email',\r\n        icon: <Email className='icon-style' style={{color: '#880e4f'}} />,\r\n        helperText: 'Min length 5, Max length 50',\r\n        maxLength: 50,\r\n        minLength: 5\r\n    }\r\n]\r\n\r\nconst SignUpPage = () => {\r\n    console.log('in sign up page');\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <Container maxWidth='xs'>\r\n        <Grid container spacing={0} alignItems='center' justify='center' style={{ minHeight: '100vh' }}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid item xs={12}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' color='primary'>\r\n                                Register Inventory\r\n                            </Typography>\r\n                        </Grid>\r\n                        <FieldsAndButton thinTextFieldList={signUpFieldList} buttonName='Regsiter' />\r\n                    </Grid> \r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUpPage;","import React from \"react\";\r\nimport FieldsAndButton from '../components/FieldsAndButton';\r\nimport { Container, Grid, CssBaseline, Card, CardContent, Typography } from '@material-ui/core'\r\nimport { Email } from '@material-ui/icons';\r\n\r\nconst LogInPage = () => {\r\n\r\n    const loginFieldList = [\r\n        {\r\n            fieldName: 'Email',  \r\n            icon: <Email className='icon-style' style={{color: '#880e4f'}} />, \r\n            helperText: 'Min length 5, Max length 50',\r\n            maxLength: 50,\r\n            minLength: 5\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <Container maxWidth='xs'>\r\n        <Grid container spacing={0} alignItems='center' justify='center' style={{ minHeight: '100vh' }}>\r\n            <Card>\r\n                <CardContent>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' color='primary'>\r\n                                Inventory Log In\r\n                            </Typography>\r\n                            <FieldsAndButton thinTextFieldList={loginFieldList} buttonName={\"Log in\"} />\r\n                        </Grid>  \r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LogInPage;","import React from \"react\";\r\nimport { Grid, GridListTile, GridList, Typography, CardActionArea, IconButton, Card, CardContent, CardHeader} from '@material-ui/core';\r\nimport { Delete, Add } from '@material-ui/icons';\r\n\r\nconst GridTileCard = (props) => {\r\n\r\n    return (\r\n        <Grid item xs={12} style={{padding: 20}}>\r\n            <GridListTile>\r\n                <Card>\r\n                    <CardHeader\r\n                        action={\r\n                            <>\r\n                                <IconButton aria-label=\"add\" >\r\n                                    <Add style={{color: '#880e4f'}} />\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"delete\" >\r\n                                    <Delete style={{color: '#880e4f'}} />\r\n                                </IconButton>\r\n                            </>\r\n                        }\r\n                    />\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography variant=\"h4\"  style={{color: '#880e4f'}} >\r\n                                {props.number}. {props.name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                \r\n            </GridListTile>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GridTileCard;","import React from \"react\";\r\nimport { Grid, GridListTile, GridList, Typography, CardActionArea, IconButton, Card, CardContent, CardHeader} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport GridTileCard from './GridTileCard';\r\n\r\nconst SingleGridList = (props) => {\r\n\r\n    return (\r\n        <GridList>\r\n            {props.inventoryList.map((inventory, index) => (\r\n                <GridTileCard \r\n                    name={inventory.name}\r\n                    number={index+1}\r\n                />\r\n            ))}\r\n            <Typography style={{color: '#e3f2fd'}}>\r\n                Definately not cheating the system here\r\n            </Typography>\r\n        </GridList>\r\n    );\r\n};\r\n\r\nexport default SingleGridList;","import React from \"react\";\r\nimport { Container, Grid, GridList, CssBaseline, Card, CardContent, Typography } from '@material-ui/core'\r\nimport SingleGridList from '../components/SingleGridList';\r\n\r\nconst inventoryList = [\r\n    {name: 'Food'},\r\n    {name: 'Tools'},\r\n    {name: 'Shoes'}\r\n]\r\nconst InventoryPage = (props) => {\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <Container maxWidth='xs'>\r\n        <Grid container style={{ minHeight: '100vh' }}>\r\n            <Grid item xs={12} align='center'>\r\n                <div style={{padding: 60}}>\r\n                    <Typography variant='h2' color='primary'>\r\n                        Inventory\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={12}> */}\r\n                <SingleGridList inventoryList={inventoryList}/>\r\n            {/* </Grid> */}\r\n\r\n        </Grid>\r\n        </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InventoryPage;","import logo from './logo.svg';\nimport './assets/css/App.css';\nimport SignUpPage from './pages/SignUpPage';\nimport LogInPage from './pages/LogInPage';\nimport InventoryPage from './pages/InventoryPage';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n    <div style={{background: '#e3f2fd', color: '#880e4f'}}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/sign-up\" />\n          </Route>\n          <Route path='/sign-up' component={SignUpPage} />\n          <Route path='/log-in' component={LogInPage} />\n          <Route path='/inventory/:userId' component={InventoryPage} />\n        </Switch>\n      </Router>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}